import java.io.*;
import java.nio.Buffer;
import java.util.*;
import java.util.regex.*;

import redis.clients.jedis.*;

import org.apache.commons.codec.binary.StringUtils;
import org.apache.commons.pool.impl.GenericObjectPool.Config;

import edu.uci.ics.crawler4j.url.WebURL;

public class APITest {

	public static void main(String[] args) throws IOException {
//		String str = new String("刘翔加油");
//		str = new String(str.getBytes("UTF-8"), "UTF-8");
//		System.out.println(str);
//		FileWriter file = new FileWriter("/home/wiza/workspace/itsucks/src/log4j.propertie");
//		BufferedWriter w = new BufferedWriter(file);
//		w.write(str);
//		w.close();
//		System.out.println();
		
//		JedisPool pool = new JedisPool(new JedisPoolConfig(), "localhost");
//		Jedis jedis = pool.getResource();
//		System.out.println(jedis.sismember("itbooks", "www.china-pub.com"));
//		jedis.disconnect();
//		pool.destroy();
		
//		Pattern p = Pattern.compile("http://product.china-pub.com/\\d{1,}(&\\?ref=\\w{1,})?");
//		Pattern tail = Pattern.compile("&\\?ref=\\w{1,}");
//		 Matcher m = p.matcher("http://product.china-pub.com/3682539#");
//		 System.out.println(m.matches());
//		String str =  "http://product.china-pub.com/8182&?ref=buyand";
//		Matcher m = p.matcher(str);
//		str = str.replaceFirst(tail.pattern(), "");
//		System.out.println(m.matches() + " " + str);
		
//		File file = new File("/home/wiza/some.html");
//		FileInputStream in = new FileInputStream(file);
//		ArrayList<Byte> bylist = new ArrayList<Byte>();
//		int b = 0;
//		while (true) {
//			b = in.read();
//			if (b == -1) break;
//			else bylist.add((byte)b);
//		}
//		int size = bylist.size();
//		byte[] bytes = new byte[size];
//		int i = 0;
//		for (Byte x: bylist) {
//			bytes[i] = x;
//			i++;
//		}
//		String html = new String(bytes, "GB2312");
//		System.out.println(html);
//		String pat = "<a class='blue13' href='http://list.china-pub.com/cache/browse2/59/1_1_59_0.html'>计算机</a>";
//		System.out.println(html.contains(pat));
		
//		String str = "<input type=\"hidden\" name=\"__VIEWSTATE\" id=\"__VIEWSTATE\" value=\"\" />";
//		System.out.println(str.split("name").length);
//		System.out.println(str.replaceAll("<.*>", ""));
//		String f = "hello我们";
//		System.out.println(str.split("wiza").length-1);
//		System.out.println(f.toLowerCase().length());
//		System.out.println(str.indexOf("2000", 21));
		
//		WebURL url = new WebURL();
//		String site = "http://blog.coly.li";
//		url.setURL("http://blog.coly.li/p/81#3");
//		System.out.println(url.getURL());
//		System.out.println(url.getDomain());
//		System.out.println(url.getSubDomain());
//		System.out.println(url.getURL().substring(site.length()));
//		ArrayList<Integer> a = new ArrayList<Integer>();
//		a.add(3);
//		a.add(1);
//		a.add(2);
//		Integer[] b = new Integer[a.size()];
//		a.toArray(b);
//		Arrays.sort(b);
//		for (Integer i: b)
//			System.out.println(i);
//		JedisPool pool = new JedisPool("localhost");
//		Jedis jedis = pool.getResource();
//		System.out.println(jedis.srandmember("itbooks"));
		
//		Vector<HashSet<Double>> all = new Vector<HashSet<Double>>();
		
		double[] scores = {
				0.18063359999999998, 
				3.90625, 
				0.9201111111111111, 
				4.624132107337212, 
				2.1481533789986584, 
				2.6716497058155095, 
				2.320321885547568, 
				0.524916267681868, 
				0.625, 
				1.3488392476523998, 
				0.5110485513807153, 
				0.524916267681868, 
				0.43190798715933076, 
				0.2911627614008567, 
				0.46604560092113123, 
				1.3695519259323954, 
				0.625, 
				0.5399859566838685, 
				0.5220979303965776, 
				0.6141148671046928, 
				1.0088935914667276, 
				0.625, 
				1.842268618752744, 
				0.689795918367347, 
				0.18355879292403748, 
				0.5220979303965776, 
				1.9313878369347293, 
				0.16191419556097386, 
				1.391408415217939, 
				0.2713553872964365, 
				0.9747831052331044, 
				0.3497194494388989, 
				0.5491168543830602, 
				0.6322463162818671, 
				2.11669921875, 
				0.5220979303965776, 
				3.2755824532257427, 
				1.867629605312997, 
				0.4584636678200692, 
				0.689795918367347, 
				0.18063359999999998, 
				0.2703066718046759, 
				0.5220979303965776, 
				0.5152270258837972, 
				2.61388601297947, 
				0.6322463162818671, 
				1.6473505631491805, 
				0.4298036882807852, 
				2.037465564738292, 
				1.0973135297459622, 
				0.3352509422733585, 
				0.6213396857612163, 
				0.4701816951270304, 
				0.1830860080773727, 
				1.3412415534268955, 
				0.4298036882807852, 
				1.579107949886539, 
				1.391408415217939, 
				0.6286074961174, 
				0.4298036882807852, 
				0.18355879292403748, 
				2.0811654526534857, 
				1.1881600091827367, 
				0.6869890202877871, 
				0.2703066718046759, 
				1.2177873835312174, 
				1.0053539559785842, 
				2.1077079401945134, 
				0.524916267681868, 
				0.508341014149118, 
				0.6869890202877871, 
				1.344307270233196, 
				0.2703066718046759, 
				1.18828125, 
				0.6117154979991555, 
				3.8768244927020294, 
				0.5110485513807153, 
				0.2703066718046759, 
				2.0811654526534857, 
				0.16143050891386873, 
				0.8076738169913691, 
				0.6869890202877871, 
				0.524916267681868, 
				0.18005695679245476, 
				0.2703066718046759, 
				0.8233564377231675, 
				1.218554718795065, 
				0.16191419556097386, 
				0.6286074961174, 
				0.43190798715933076, 
				0.2601456815816857, 
				0.6869890202877871, 
				1.7301038062283738, 
				1.3610586011342154, 
				0.2900107832565435, 
				1.0973135297459622, 
				0.6008888888888889, 
				3.870387338608912, 
				0.4056403534270467, 
				2.9166409847757753, 
				2.2410945130709568, 
				0.6869890202877871, 
				1.0787124130311445, 
				2.4196597353497165, 
				0.16143050891386873, 
				0.2900107832565435, 
				0.508341014149118, 
				0.75452657726717, 
				0.2713553872964365, 
				0.10412328196584758, 
				0.39274391477835835, 
				0.16143050891386873, 
				0.508341014149118, 
				1.0973135297459622, 
				0.9216977788279774, 
				54.76997104032079, 
				0.0, 
				0.6008888888888889, 
				0.10412328196584758, 
				1.424625639152666, 
				1.2441171604673185, 
				2.382332210823087, 
				2.4196597353497165, 
				1.1787898025326606, 
				0.5491168543830602, 
				0.945179584120983, 
				0.16143050891386873, 
				0.3352509422733585, 
				0.32780055401662056, 
				0.3497194494388989, 
				1.424625639152666, 
				0.44648624501204354, 
				0.16143050891386873, 
				0.16143050891386873, 
				2.3407202216066483, 
				0.34834665606509163, 
				0.39727940182874644, 
				0.3339059047434718, 
				0.2900107832565435, 
				0.16143050891386873, 
				0.18005695679245476, 
				0.10387373554393896, 
				0.34834665606509163, 
				0.4018669752935488, 
				0.3339059047434718, 
				0.16143050891386873, 
				0.2900107832565435, 
				0.16143050891386873, 
				0.3909607438016529, 
				0.18005695679245476, 
				0.34834665606509163, 
				0.3339059047434718, 
				0.18005695679245476, 
				0.16143050891386873, 
				0.5461365784499055, 
				0.2911627614008567, 
				0.3339059047434718, 
				0.39274391477835835, 
				0.34834665606509163, 
				0.18005695679245476, 
				0.5095032412287047, 
				0.16143050891386873, 
				0.5461365784499055, 
				1.424625639152666, 
				0.34834665606509163, 
				0.3339059047434718, 
				0.18005695679245476, 
				0.3339059047434718, 
				0.16143050891386873, 
				0.34834665606509163, 
				0.3339059047434718, 
				0.3339059047434718, 
				0.18005695679245476, 
				5.3670383340713, 
				0.3909607438016529, 
				0.16143050891386873, 
				0.2900107832565435, 
				0.3339059047434718, 
				0.7685639801535704, 
				0.3339059047434718, 
				1.54320987654321, 
				0.34834665606509163, 
				0.2900107832565435, 
				0.3339059047434718, 
				0.16143050891386873, 
				3.2755824532257427, 
				0.3339059047434718, 
				0.18005695679245476, 
				0.3909607438016529, 
				1.424625639152666, 
				0.34834665606509163, 
				0.2900107832565435, 
				0.0, 
				0.3339059047434718, 
				0.4298036882807852, 
				0.3339059047434718, 
				1.7207133058984911, 
				0.34834665606509163, 
				0.2900107832565435, 
				2.2046899654736056, 
				0.665420250879552, 
				0.2900107832565435, 
				0.3339059047434718, 
				0.18005695679245476, 
				0.4298036882807852, 
				0.34834665606509163, 
				0.4637412998725615, 
				0.4677919572156505, 
				0.2900107832565435, 
				0.0, 
				2.7126020832314532, 
				0.3339059047434718, 
				0.4298036882807852, 
				1.7301038062283738, 
				0.0, 
				0.34834665606509163, 
				2.382332210823087, 
				0.2900107832565435, 
				0.3339059047434718, 
				0.2591612144168962, 
				0.46604560092113123, 
				0.0, 
				0.4701816951270304, 
				0.7894370680822536, 
				0.4701816951270304, 
				0.3339059047434718, 
				0.4637412998725615, 
				0.2591612144168962, 
				0.2900107832565435, 
				0.0, 
				0.5491168543830602, 
				4.349110043222637, 
				1.2038501601018479, 
				1.0223062381852552, 
				0.5461365784499055, 
				0.4677919572156505, 
				0.0, 
				0.2900107832565435, 
				2.4035555555555557, 
				0.6213396857612163, 
				0.32642468752206766, 
				1.0223062381852552, 
				0.5461365784499055, 
				0.0, 
				0.4677919572156505, 
				1.8858224883522001, 
				1.2038501601018479, 
				0.2900107832565435, 
				2.100954553265947, 
				0.0, 
				0.4677919572156505, 
				0.2591612144168962, 
				1.3371376442387009, 
				0.32642468752206766, 
				0.0, 
				0.6117154979991555, 
				0.4637412998725615, 
				1.2441171604673185, 
				0.2591612144168962, 
				0.0, 
				0.3909607438016529, 
				0.32780055401662056, 
				2.3613887325583653, 
				0.5399859566838685, 
				0.4637412998725615, 
				0.0, 
				0.2591612144168962, 
				0.1830860080773727, 
				0.32642468752206766, 
				2.232004464008928, 
				0.3909607438016529, 
				0.0, 
				0.4677919572156505, 
				0.5371771918402778, 
				0.2601456815816857, 
				2.7637551020408164, 
				0.3909607438016529, 
				2.2046899654736056, 
				0.34834665606509163, 
				0.0, 
				0.5371771918402778, 
				0.4677919572156505, 
				2.2089999999999996, 
				0.44095500459136827, 
				1.2988553590010405, 
				0.34834665606509163, 
				0.0, 
				2.100954553265947, 
				0.5068391765576601, 
				2.1481533789986584, 
				1.25, 
				0.4701816951270304, 
				0.34834665606509163, 
				0.4056403534270467, 
				0.0, 
				2.2046899654736056, 
				0.5220979303965776, 
				0.5068391765576601, 
				0.34834665606509163, 
				2.3407202216066483, 
				0.5068391765576601, 
				0.0, 
				0.5214210428420858, 
				0.4037470521442921, 
				0.9422510666426297, 
				0.34834665606509163, 
				2.1481533789986584, 
				0.4677919572156505, 
				0.5095032412287047, 
				0.0, 
				1.8712802768166092, 
				1.2988553590010405, 
				0.56059465708677, 
				0.34834665606509163, 
				0.6117154979991555, 
				0.4677919572156505, 
				2.339161559940781, 
				0.0, 
				0.524916267681868, 
				0.6105496214169821, 
				0.34834665606509163, 
				0.9216977788279774, 
				2.339161559940781, 
				0.0, 
				0.30589002353977207, 
				0.37779924080770877, 
				0.6141148671046928, 
				1.4308810894208293, 
				0.34834665606509163, 
				2.4035555555555557, 
				5.001662594514884, 
				4.788850496609753, 
				0.0, 
				2.2046899654736056, 
				0.34834665606509163, 
				0.4677919572156505, 
				0.436163212575989, 
				1.344307270233196, 
				1.3197542294419662, 
				0.625, 
				0.34834665606509163, 
				0.4677919572156505, 
				1.4509867821986218, 
				0.0, 
				0.5738627105624567, 
				3.8768244927020294, 
				0.4677919572156505, 
				0.18005695679245476, 
				0.34834665606509163, 
				0.6213820625918925, 
				1.7378592114056586, 
				0.0, 
				1.3037573562698053, 
				3.493339273780352, 
				0.4677919572156505, 
				2.382332210823087, 
				0.44430026912725873, 
				0.0, 
				0.2703066718046759, 
				0.5461365784499055, 
				2.7030376995099252, 
				0.6869890202877871, 
				2.7863537465278077, 
				0.44430026912725873, 
				2.8645110097202933, 
				0.0, 
				0.2703066718046759, 
				0.508341014149118, 
				0.5461365784499055, 
				0.6869890202877871, 
				0.6117154979991555, 
				1.9195693963860054, 
				0.32642468752206766, 
				0.508341014149118, 
				0.0, 
				0.2703066718046759, 
				0.6869890202877871, 
				2.4035555555555557, 
				0.32642468752206766, 
				0.0, 
				1.9195693963860054, 
				0.508341014149118, 
				0.10387373554393896, 
				0.32642468752206766, 
				0.2703066718046759, 
				0.10387373554393896, 
				3.285246876859012, 
				2.1663195000801148, 
				0.6869890202877871, 
				0.44648624501204354, 
				0.5371771918402778, 
				3.8111111111111113, 
				0.2703066718046759, 
				0.524916267681868, 
				0.0, 
				0.6869890202877871, 
				0.10387373554393896, 
				0.5371771918402778, 
				1.9195693963860054, 
				2.1663195000801148, 
				1.2109867692273948, 
				0.10387373554393896, 
				0.10387373554393896, 
				0.0, 
				3.8111111111111113, 
				0.5220979303965776, 
				0.44430026912725873, 
				0.2591612144168962, 
				0.0, 
				0.44430026912725873, 
				0.10387373554393896, 
				0.10387373554393896, 
				3.8111111111111113, 
				0.5220979303965776, 
				0.2591612144168962, 
				0.0, 
				0.10412328196584758, 
				0.4000000000000001, 
				2.1663195000801148, 
				0.44430026912725873, 
				0.8163265306122448, 
				0.2591612144168962, 
				0.0, 
				0.10387373554393896, 
				1.6625819169907823, 
				0.10387373554393896, 
				0.2591612144168962, 
				0.44430026912725873, 
				0.4000000000000001, 
				0.7257620222556159, 
				0.3681547421897691, 
				0.0, 
				0.10387373554393896, 
				0.5220979303965776, 
				0.4018669752935488, 
				0.2591612144168962, 
				4.894678251818011, 
				0.10387373554393896, 
				0.10387373554393896, 
				0.5220979303965776, 
				0.0, 
				1.3867054148211688, 
				0.10387373554393896, 
				0.36649825501176847, 
				0.10387373554393896, 
				0.0, 
				1.5150891632373114, 
				1.4625573738536652, 
				0.36649825501176847, 
				0.10387373554393896, 
				0.10387373554393896, 
				0.30463509143269146, 
				0.10387373554393896, 
				5.711205640696929, 
				2.2145328719723185, 
				0.4677919572156505, 
				0.36649825501176847, 
				0.30463509143269146, 
				0.10387373554393896, 
				1.9641262884506128, 
				0.36649825501176847, 
				0.10387373554393896, 
				0.10387373554393896, 
				2.44380922546793, 
				0.4677919572156505, 
				0.30463509143269146, 
				0.10387373554393896, 
				2.6600766824574507, 
				0.10387373554393896, 
				0.10387373554393896, 
				0.4677919572156505, 
				0.30463509143269146, 
				4.343322738245473, 
				0.36649825501176847, 
				0.4677919572156505, 
				0.10387373554393896, 
				0.10387373554393896, 
				0.10387373554393896, 
				3.0154699455377725, 
				0.30463509143269146, 
				0.36649825501176847, 
				0.4037470521442921, 
				0.10387373554393896, 
				0.10387373554393896, 
				0.10387373554393896, 
				1.1982248520710057, 
				0.36649825501176847, 
				0.30463509143269146, 
				0.10387373554393896, 
				0.10387373554393896, 
				2.8645110097202933, 
				0.5214210428420858, 
				1.0701897430936553, 
				0.3681547421897691, 
				1.1256301346391437, 
				0.30463509143269146, 
				0.5186946629752474, 
				0.5186946629752474, 
				0.10387373554393896, 
				0.36649825501176847, 
				0.4000000000000001, 
				0.30463509143269146, 
				0.5186946629752474, 
				0.10387373554393896, 
				0.5186946629752474, 
				0.4000000000000001, 
				0.36649825501176847, 
				0.10387373554393896, 
				0.30589002353977207, 
				2.0454028938663167, 
				1.6338757396449701, 
				0.36649825501176847,
				0.10387373554393896, 
				1.504926492102033, 
				1.446848989298454, 
				0.5775922590885504, 
				0.30463509143269146, 
				3.094586555621654, 
				4.8999999999999995, 
				0.36649825501176847, 
				4.905448984844584, 
				0.30463509143269146, 
				0.36649825501176847, 
				4.202615933412604, 
				1.446848989298454, 
				0.5775922590885504, 
				0.30463509143269146, 
				4.222653755424937, 
				0.37660838499736293, 
				0.36649825501176847, 
				0.5491168543830602, 
				0.5068391765576601, 
				0.9506944444444445, 
				0.30463509143269146, 
				0.5744143159620245, 
				0.36649825501176847, 
				0.5461365784499055, 
				0.5744143159620245, 
				0.5068391765576601, 
				0.37660838499736293, 
				0.30463509143269146, 
				0.5744143159620245, 
				2.848440853427597, 
				0.5461365784499055, 
				0.5744143159620245, 
				0.5068391765576601, 
				0.37779924080770877, 
				0.30463509143269146, 
				0.9867202617744522, 
				2.704, 
				0.37660838499736293, 
				0.5432754819379275, 
				3.1360000000000006, 
				0.5574845679012346, 
				0.30463509143269146, 
				2.3201118390395, 
				2.4655802469135804, 
				0.37660838499736293, 
				0.9927685950413223, 
				0.56059465708677, 
				0.37660838499736293, 
				2.648336240210663, 
				0.37660838499736293, 
				4.290934696305648, 
				0.30463509143269146, 
				0.56059465708677, 
				0.56059465708677, 
				0.7419774925665248, 
				0.6105496214169821, 
				0.30463509143269146, 
				3.082526445680622, 
				0.5574845679012346, 
				0.5574845679012346, 
				0.5574845679012346, 
				0.5574845679012346, 
				3.473080697646391, 
				2.9135459710743805, 
				0.30463509143269146, 
				0.5574845679012346, 
				0.5574845679012346, 
				1.3360473372781065, 
				0.5220979303965776, 
				0.5574845679012346, 
				2.4655802469135804, 
				0.0, 
				0.43402777777777785, 
				0.0, 
				0.43402777777777785, 
				0.0, 
				0.0, 
				0.43402777777777785, 
				0.0, 
				0.436163212575989, 
				0.0, 
				0.43402777777777785, 
				0.0, 
				0.43402777777777785, 
				0.0, 
				0.43402777777777785, 
				0.43402777777777785, 
				0.43402777777777785, 
				0.0, 
				0.43402777777777785, 
				0.0, 
				0.43402777777777785, 
				1.3680473372781066, 
				0.0, 
				0.6213820625918925, 
				0.0, 
				2.380198699490857, 
				0.0, 
				0.5706790123456791, 
				0.0, 
				0.5706790123456791, 
				2.380198699490857, 
				2.380198699490857, 
				0.5738627105624567, 
				0.5706790123456791, 
				3.493339273780352, 
				0.5706790123456791, 
				4.678763422285485, 
				3.0977564552179477, 
				2.4655802469135804
		};
		Arrays.sort(scores);
		int len = scores.length;
		double[] sum = new double[scores.length];
		double[] ssum = new double[scores.length];
		sum[0] = scores[0];
		ssum[0] = scores[0] * scores[0];
		for (int i = 1; i < len; i++) {
			sum[i] = sum[i-1] + scores[i];
			ssum[i] = ssum[i-1] + scores[i] * scores[i];
		}
		int fence = len / 5;
		int end = len - len/10;
		double minProduct = Double.MAX_VALUE;
		double tsum = sum[len-1];
		double tssum = ssum[len-1];
		double val = scores[fence];
		double var1 = 0, var2 = 0;
		for (int i = fence; i < end; i++) {
			double v1 = ssum[i]/(i+1) - sum[i]/(i+1) * sum[i]/(i+1);
			double v2 = (tssum - ssum[i])/(len-i-1) - (tsum - sum[i]) * (tsum - sum[i]) /(len-i-1) /(len-i-1);
			if (v1 * v2 != 0 && v1 * v2 < minProduct * 1.08) {
				minProduct = v1 * v2;
				var1 = v1;
				var2 = v2;
				fence = i;
			}
		}
		System.out.println(fence + " / " + len);
		System.out.println(scores[fence]);
		System.out.println(minProduct);
		System.out.println(var1);
		System.out.println(var2);
	}

}
